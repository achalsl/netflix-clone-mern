{"ast":null,"code":"var _jsxFileName = \"/Users/achal/react-projects/netflix-clone-mern/api/client/src/components/Watchlist/Watchlist.jsx\",\n    _s = $RefreshSig$();\n\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from '@material-ui/icons';\nimport React, { useRef, useState } from 'react';\nimport WatchlistItem from '../WatchlistItem/WatchlistItem';\nimport './Watchlist.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Watchlist = props => {\n  _s();\n\n  const [slideNumber, setSlideNumber] = useState(0);\n  const [isMoved, setIsMoved] = useState(false);\n  const [isEnded, setIsEnded] = useState(false);\n  const watchlistRef = useRef();\n  let listLength = props.watchlist.content.length;\n\n  const handleClick = direction => {\n    setIsMoved(true);\n    let distance = watchlistRef.current.getBoundingClientRect().x - 50;\n\n    if (direction === \"left\" && slideNumber > 0) {\n      setIsEnded(false);\n\n      if (slideNumber - 5 <= 0) {\n        watchlistRef.current.style.transform = `translateX(${slideNumber * 230 + distance}px)`;\n        setSlideNumber(0);\n      }\n\n      if (slideNumber - 5 > 0) {\n        watchlistRef.current.style.transform = `translateX(${1150 + distance}px)`;\n        setSlideNumber(slideNumber - 5);\n      }\n    }\n\n    if (direction === \"right\" && slideNumber < listLength) {\n      if (slideNumber <= listLength - 10) {\n        if (slideNumber === listLength - 10) {\n          setIsEnded(true);\n        }\n\n        setSlideNumber(slideNumber + 5);\n        watchlistRef.current.style.transform = `translateX(${-1150 + distance}px)`;\n      } else {\n        if (slideNumber < listLength - 5) {\n          watchlistRef.current.style.transform = `translateX(${(slideNumber - listLength + 5) * 230 + distance}px)`;\n          setSlideNumber(listLength - 5);\n          setIsEnded(true);\n        }\n      }\n    }\n  };\n\n  console.log('slideNumber', slideNumber, 'watchlistLength', listLength);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"watchlistTitle\",\n      children: props.watchlist.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosOutlined, {\n        className: \"sliderArrow left\",\n        onClick: () => handleClick('left'),\n        style: {\n          display: !isMoved && 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: watchlistRef,\n        children: props.watchlist.content.map((item, index) => /*#__PURE__*/_jsxDEV(WatchlistItem, {\n          index: index,\n          item: item,\n          slideNumber: slideNumber,\n          listLength: listLength\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosOutlined, {\n        className: \"sliderArrow right\",\n        onClick: () => handleClick('right'),\n        style: {\n          display: isEnded && 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Watchlist, \"3KMA7/ARRqJMB2mdQglUrC/UHMA=\");\n\n_c = Watchlist;\nexport default Watchlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"sources":["/Users/achal/react-projects/netflix-clone-mern/api/client/src/components/Watchlist/Watchlist.jsx"],"names":["ArrowBackIosOutlined","ArrowForwardIosOutlined","React","useRef","useState","WatchlistItem","Watchlist","props","slideNumber","setSlideNumber","isMoved","setIsMoved","isEnded","setIsEnded","watchlistRef","listLength","watchlist","content","length","handleClick","direction","distance","current","getBoundingClientRect","x","style","transform","console","log","title","display","map","item","index"],"mappings":"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","sourcesContent":["import { ArrowBackIosOutlined, ArrowForwardIosOutlined } from '@material-ui/icons'\nimport React, { useRef, useState } from 'react'\nimport WatchlistItem from '../WatchlistItem/WatchlistItem'\nimport './Watchlist.scss'\nconst Watchlist = (props) => {\n    const [slideNumber, setSlideNumber] = useState(0)\n    const [isMoved, setIsMoved] = useState(false)\n    const [isEnded, setIsEnded] = useState(false)\n\n    const watchlistRef = useRef()\n    let listLength = props.watchlist.content.length\n\n    const handleClick = (direction) => {\n        setIsMoved(true)\n        let distance = watchlistRef.current.getBoundingClientRect().x - 50\n        \n        if(direction === \"left\" && slideNumber > 0) {\n            setIsEnded(false)\n            if(slideNumber - 5 <= 0) {\n                watchlistRef.current.style.transform = `translateX(${slideNumber * 230 + distance}px)`\n                setSlideNumber(0)\n            }\n            if(slideNumber - 5 > 0) {\n                watchlistRef.current.style.transform = `translateX(${1150 + distance}px)`\n                setSlideNumber(slideNumber - 5)\n            }\n            \n            \n        }\n        if(direction === \"right\" && slideNumber < listLength) {\n            if(slideNumber <= listLength - 10) {\n                if(slideNumber === listLength - 10) {\n                    setIsEnded(true)\n                }\n                setSlideNumber(slideNumber + 5)\n                watchlistRef.current.style.transform = `translateX(${-1150 + distance}px)`\n            } else {\n                if(slideNumber < listLength - 5) {\n                    watchlistRef.current.style.transform = `translateX(${(slideNumber - listLength + 5)*230 + distance}px)`\n                    setSlideNumber(listLength - 5)\n                    setIsEnded(true)\n                }\n            }\n        }\n    }\n    console.log('slideNumber', slideNumber, 'watchlistLength', listLength)\n    return (\n        <div className=\"watchlist\">\n            <span className=\"watchlistTitle\">{props.watchlist.title}</span>\n            <div className=\"wrapper\">\n                <ArrowBackIosOutlined \n                    className=\"sliderArrow left\" \n                    onClick={() => handleClick('left')}\n                    style={{display: !isMoved && 'none'}}\n                />\n                <div className=\"container\" ref={watchlistRef}>\n                    {props.watchlist.content.map((item, index) => (\n                        <WatchlistItem index={index} item={item} key={index} slideNumber={slideNumber} listLength={listLength}/>\n                    ))}\n                </div>\n                <ArrowForwardIosOutlined \n                    className=\"sliderArrow right\" \n                    onClick={() => handleClick('right')} \n                    style={{display: isEnded && 'none'}}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Watchlist\n"]},"metadata":{},"sourceType":"module"}